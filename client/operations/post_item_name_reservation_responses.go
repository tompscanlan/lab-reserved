package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/tompscanlan/labreserved/models"
)

// PostItemNameReservationReader is a Reader for the PostItemNameReservation structure.
type PostItemNameReservationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostItemNameReservationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostItemNameReservationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostItemNameReservationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostItemNameReservationOK creates a PostItemNameReservationOK with default headers values
func NewPostItemNameReservationOK() *PostItemNameReservationOK {
	return &PostItemNameReservationOK{}
}

/*PostItemNameReservationOK handles this case with default header values.

Accepted
*/
type PostItemNameReservationOK struct {
	Payload *models.Reservation
}

func (o *PostItemNameReservationOK) Error() string {
	return fmt.Sprintf("[POST /item/{name}/reservation][%d] postItemNameReservationOK  %+v", 200, o.Payload)
}

func (o *PostItemNameReservationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Reservation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostItemNameReservationBadRequest creates a PostItemNameReservationBadRequest with default headers values
func NewPostItemNameReservationBadRequest() *PostItemNameReservationBadRequest {
	return &PostItemNameReservationBadRequest{}
}

/*PostItemNameReservationBadRequest handles this case with default header values.

Error
*/
type PostItemNameReservationBadRequest struct {
	Payload string
}

func (o *PostItemNameReservationBadRequest) Error() string {
	return fmt.Sprintf("[POST /item/{name}/reservation][%d] postItemNameReservationBadRequest  %+v", 400, o.Payload)
}

func (o *PostItemNameReservationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
